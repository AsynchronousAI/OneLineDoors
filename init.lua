--[[ Variables ]] activeRoom = 0; hiding = false; --[[ Generate a room with a start point ]] function gen(room, start, i) room = room:Clone(); room.Parent = workspace; room.Name = i; room:SetPrimaryPartCFrame(CFrame.new(start)) register(room); return room.End.Position end --[[ Generate 100 rooms ]] function gen100() start = Vector3.new(0,0,0); for i = 1, 100 do --[[ Add a door ]] addDoor = game.ServerStorage.Door:Clone() addDoor.Parent = workspace; addDoor.Label.GUI.Text.Text = i; addDoor:SetPrimaryPartCFrame(CFrame.new(start)) door(addDoor) start = gen(game.ServerStorage.Rooms:GetChildren()[math.random(1, #game.ServerStorage.Rooms:GetChildren())], start, i) end end --[[ Closets ]] function registerCloset(closet) chair = closet.Parent closet.Triggered:Connect(function(plr)hiding = true; chair:Sit(plr.Character.Humanoid) end) old = nil; chair.Changed:Connect(function(change)if chair.Occupant then  closet.Enabled = false old = chair.Occupant else closet.Enabled = true --[[ Free old occupant ]] if old then print("freeing ", old) old.Parent.HumanoidRootPart.CFrame = (closet.Parent.Parent.Escape.CFrame) hiding = false old = nil end end end)end --[[ Room register ]] function register(room) if room:FindFirstChild("Closets") then for i, v in room.Closets:GetChildren() do for i, vv in v:GetChildren() do if vv:IsA("Seat") then registerCloset(vv.ProximityPrompt) end end end end end --[[ Register a Door ]] function door(targetDoor) TweenService = game:GetService("TweenService")hinge = targetDoor.Doorframe.Hinge prompt = targetDoor.Base.ProximityPrompt goalOpen = {}goalOpen.CFrame = hinge.CFrame * CFrame.Angles(0, math.rad(90), 0) goalClose = {}goalClose.CFrame = hinge.CFrame * CFrame.Angles(0, 0, 0) tweenInfo = TweenInfo.new(1) tweenOpen = TweenService:Create(hinge, tweenInfo, goalOpen) tweenClose = TweenService:Create(hinge, tweenInfo, goalClose)prompt.Triggered:Connect(function()if prompt.ActionText == "Close" then tweenClose:Play() prompt.ActionText = "Open" else if tonumber(prompt.Parent.Parent.Label.GUI.Text.Text) == activeRoom then sendRush() return end activeRoom = tonumber(prompt.Parent.Parent.Label.GUI.Text.Text); if math.random(1,10) == 5 and tonumber(prompt.Parent.Parent.Label.GUI.Text.Text) > 10 then sendRush() end tweenOpen:Play() prompt.ActionText = "Close"end end)end --[[ Rush ]]   --[[ rush ]]function sendRush() room = workspace[tostring(activeRoom)] print("sending rush to ", activeRoom) game.SoundService.Knock:Play() for i, v in room.Lights:GetChildren() do coroutine.wrap(function()     v.LightFixture.PointLight.Enabled = false     v.LightFixture.BulbZap:Play()     v.LightFixture.Neon.Color = Color3.new(0,0,0)     task.wait(.5)     v.LightFixture.PointLight.Enabled = true     v.LightFixture.Neon.Color = Color3.fromRGB(195, 161, 141) end)()end task.wait(math.random(3, 6))  rush = game.ServerStorage.Rush:Clone() rush.Parent = workspace rush.CFrame = workspace["1"].Start.CFrame rush.Position += Vector3.new(0,8,0) rush.Audio:Play() tweenService = game:GetService("TweenService") tweenService:Create(rush,TweenInfo.new(1), {     Position = room.End.Position + Vector3.new(0,8,0) }):Play() task.wait(1) if not hiding then     game.Players:GetChildren()[1]:Kick("You got killed by rush!") end     rush:Destroy() end    gen100() --[[ main ]]
